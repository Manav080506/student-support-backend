name: Backend Tests

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Add mongo-memory-server and start
        run: |
          npm i --no-save mongodb-memory-server@8
          node -e "const { MongoMemoryServer } = require('mongodb-memory-server'); (async()=>{ const m=new MongoMemoryServer(); const uri=await m.getUri(); console.log('::set-output name=MONGO_URI::'+uri); })()"
        id: memdb

      - name: Start backend (AUTO_SEED=true)
        env:
          MONGODB_URI: ${{ steps.memdb.outputs.MONGO_URI }}
          AUTO_SEED: "true"
        run: |
          nohup npm start > server.log 2>&1 &
          sleep 6
          tail -n +1 server.log

      - name: Wait for server up
        run: |
          for i in {1..10}; do
            curl -sS http://localhost:5000/ || sleep 1
          done

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Run POST tests (example set)
        run: |
          set -e
          # Mess timing
          RESPONSE=$(curl -s -X POST http://localhost:5000/webhook -H "Content-Type: application/json" -d '{"queryResult":{"queryText":"When is mess food served?","intent":{"displayName":"Default Fallback Intent"}}}')
          echo "$RESPONSE" | jq -r '.fulfillmentText' | grep -i "mess"
          # WiFi
          RESPONSE=$(curl -s -X POST http://localhost:5000/webhook -H "Content-Type: application/json" -d '{"queryResult":{"queryText":"How to connect wifi?","intent":{"displayName":"Default Fallback Intent"}}}')
          echo "$RESPONSE" | jq -r '.fulfillmentText' | grep -i "wifi"
          # Finance (seeded)
          RESPONSE=$(curl -s -X POST http://localhost:5000/webhook -H "Content-Type: application/json" -d '{"queryResult":{"queryText":"Check finance for STU001","intent":{"displayName":"FinanceIntent"},"parameters":{"studentId":"STU001"}}}')
          echo "$RESPONSE" | jq -r '.fulfillmentText' | grep -i "Finance Summary"
